class Solution {
public:
bool isVowel(char& ch){
    if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u') return true;
    return false;
}
    vector<int> vowelStrings(vector<string>& words, vector<vector<int>>& queries) {
        int n=words.size();
        vector<int> check(n,0);
       
int sum=0;
        for(int i=0;i<n;i++){
            int size=words[i].size();
            string str=words[i];
            // if(st.find(str[0])!=st.end() && st.find(str[size-1])!=st.end()) check[i]=true;
            // if(mpp[str[0]] && mpp[str[size-1]]) check[i]=true;
            // if(isVowel(str[0]) && isVowel(str[size-1])) check[i]=true;
            if(isVowel(str[0]) && isVowel(str[size-1])) sum++;

            check[i]=sum;
        }

        // for(auto it:check) cout<<it<<" ";

        vector<int> ans;
        for(auto it:queries){
            int l=it[0];
            int r=it[1];

            // int count=0;
            // for(int i=l;i<=r;i++){
            //     if(check[i]==true) count++;
            // }

            int count = check[r]-(l==0?0:check[l-1]);
            
            ans.push_back(count);
        }

        return ans;
    }
};
